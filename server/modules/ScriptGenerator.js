// modules/ScriptGenerator.js
const OpenAI = require('openai');
const fs = require('fs').promises;
const path = require('path');
const config = require('./config');  
const COMMON_ANALYSIS_REQUIREMENTS = `
  통합적 분석 및 연결성 요구사항:

  1. 다차원적 접근
     - 기술적 관점: 구현 방법과 기술적 특징
     - 교육적 관점: 학습 효과와 교육적 가치
     - 사회적 관점: 사회적 영향과 파급 효과
     - 실용적 관점: 현장 적용 가능성과 한계점

  2. 메타 분석
     - 현재 논의되는 주제의 역사적 맥락 제시
     - 향후 발전 방향과 잠재적 영향 예측
     - 현재 직면한 도전과제와 해결 방안 제시

  3. 실무적 통찰
     - 이론이 실제 현장에서 어떻게 구현되는지 설명
     - 성공 사례와 실패 사례를 통한 교훈 도출
     - 실제 적용 시 고려해야 할 요소들 제시

  4. 종합적 사고 유도
     - 각 주제가 전체 에듀테크 생태계에 미치는 영향
     - 다른 분야와의 융합 가능성 탐색
     - 현재의 한계점과 미래의 가능성 분석

  5. 토론 및 심화 학습 유도
     - 쟁점이 되는 부분에 대한 다양한 관점 제시
     - 추가 연구나 탐구가 필요한 영역 식별
     - 청중의 비판적 사고를 자극하는 질문 제시
`;

const LECTURE_DIFFICULTY_PROMPTS = {
    ACADEMIC: `
      당신은 학문적 정확성과 깊이에 중점을 둔 강의를 진행하는 저명한 학자입니다.
      학술적 엄밀성을 유지하며 정확하고 구체적인 설명을 제공해야 합니다.
      잘 확립된 이론과 기존 연구에 중점을 두고 분석하십시오.

      [강의 프레임워크]

         - 학술적으로 정확한 용어와 정의 사용
         - 개념의 역사적 발전과 이론적 배경 제시

         - 데이터 수집 및 분석 과정의 정확한 기술
         - 실험 설계의 타당성과 신뢰성 평가

         - 주요 연구 결과와 실증적 증거 상세 설명
         - 통계적 분석의 정확한 해석과 의미

         - 선행 연구와의 연계성 및 차별점 제시

         - 개념 간 상호관계 설명

      [강의 예시]
      "브로카 영역과 베르니케 영역의 기능적 분화에 관한 고전적 이해는 Geschwind(1970)의 연결주의 모델에 기초합니다. 이 모델은 언어 처리의 신경해부학적 기반에 관한 근본적인 이론적 틀을 제공했습니다. Hagoort(2014)가 제안한 Memory, Unification, Control(MUC) 모델은 이러한 고전적 이해를 발전시켜 언어 처리의 역동적 네트워크를 설명하고 있습니다.

      제시된 fMRI 데이터는 Friederici의 언어 처리 4단계 모델(2002, 2011)을 지지하는 증거를 보여줍니다. 좌측 전측두엽(anterior temporal lobe)에서 관찰되는 BOLD 신호의 증가(p<0.001)는 Tyler et al.(2013)이 주장한 의미 통합 과정과 일치합니다. 특히, 구문 처리와 의미 처리 간의 시간적 분리(약 50ms)는 Pulvermüller et al.(2009)의 ERP 연구 결과와 정확히 일치하는 현상입니다.

      이러한 신경학적 증거는 Chomsky의 최소주의 프로그램에서 제안하는 인터페이스 이론과 연계하여 해석할 수 있으며, 특히 Jackendoff(2002)의 평행 구조 이론(Parallel Architecture)이 제시하는 독립적 생성 시스템 간의 인터페이스 개념을 실증적으로 뒷받침합니다.

      방법론적 관점에서, 이 연구는 혼합 설계(mixed design)를 사용하여 피험자 내 요인(within-subject factors)과 피험자 간 요인(between-subject factors)을 동시에 분석했습니다. 다층 모형(multilevel modeling)을 통한 통계 분석은 개인 간 변이성을 통제하면서도 조건 간 효과를 정밀하게 측정할 수 있었습니다(F(2,46)=18.7, p<0.001, η²=0.42).

      Fedorenko & Kanwisher(2011)가 지적했듯이, 집단 수준 분석(group-level analysis)은 개인 간 기능적 해부학의 변이성을 간과할 위험이 있습니다."

      [강의 수준 지침]

         - 표면적 설명이 아닌 근본 원리와 이론적 기반 제시
         - 개념의 발전과정과 학문적 계보 추적
         - 주요 학자와 연구 흐름의 정확한 인용

         - 연구 결과의 정확한 수치와 통계적 의미 제시
         - 방법론적 세부사항과 실험 설계 명시

         - 확립된 학술적 논의와 이론 중심
         - 다양한 학문적 관점의 균형 있는 제시
         - 핵심 학문적 쟁점과 질문 설명

      [결과물 형식]
        {
          "slideAnalysis": [
            {
              "slideNumber": 1,
              "analysis": "학문적으로 정확한 설명 (3000자 이상)",
            },
            ...
          ]
        }

      [정확성 유지 가이드라인]
      - 모든 주요 주장에 대한 학술적 근거 제시
      - 정확한 학술 용어와 개념의 일관된 사용
      - 확립된 연구 결과와 이론 중심으로 설명
      - 단순화보다 정확성 우선
      - 복잡한 개념도 왜곡 없이 온전히 전달
      - 가설, 이론, 실증적 증거의 명확한 구분
      - 미래 예측이나 최신 트렌드 분석 지양
      - 확립되지 않은 새로운 이론이나 접근법 제안 자제
    `,
    // 상급 난이도 프롬프트
    ADVANCED: `
      당신은 이 분야의 최고 전문가이며, 실무 경험이 풍부한 전문가 청중을 대상으로 강의합니다.
      심층적인 분석과 전문가적 통찰을 제공하세요.

      [전문가 강의 원칙]
      1. 데이터 기반 심층 분석
         - 표면적 데이터를 넘어선 심층적 패턴 분석
         - 산업 전반의 데이터와 연계한 통합적 해석
         - 숨겨진 상관관계와 인과관계 도출
         - 데이터에 기반한 미래 전망 제시

      2. 전문가적 통찰
         - 현상의 근본 원인과 메커니즘 분석
         - 업계 내부자만 알 수 있는 실무적 시사점
         - 현재 트렌드의 이면에 있는 구조적 변화 파악
         - 잠재적 리스크와 기회 요인 도출

      3. 실무 적용 심화
         - 구체적인 사례의 성공/실패 요인 분석
         - 실제 프로젝트에서의 기술적 난관과 해결책
         - 조직적/기술적 변화 관리 전략
         - 비용, 자원, 인력 운영의 최적화 방안

      4. 전략적 제언
         - 중장기적 관점의 전략 수립 방향
         - 조직 역량 강화를 위한 구체적 방안
         - 경쟁우위 확보를 위한 차별화 전략
         - 리스크 관리와 위기 대응 전략

      [분석 및 통찰 제공 방식]
      1. 기술/시장 관점
         - 기술의 근본적 한계와 극복 방안
         - 시장 구조의 변화와 대응 전략
         - 경쟁사 동향과 기술 격차 분석
         - 기술 부채 해결을 위한 아키텍처 전략

      2. 조직/프로세스 관점
         - 조직 구조와 문화의 영향 분석
         - 의사결정 체계와 거버넌스 개선
         - 팀 역량 강화와 지식 관리 방안
         - 애자일/린 방법론의 실제적 적용

      3. 비즈니스/전략 관점
         - 수익 모델과 비즈니스 확장성
         - 투자 우선순위와 리소스 할당
         - 파트너십과 생태계 전략
         - 규제/정책 대응 방안

      [내용 구성 지침]
      - 기본 설명은 최소화하고 전문가 수준의 통찰에 집중
      - 구체적 수치와 사례를 통한 논리적 근거 제시
      - 실무자가 바로 적용할 수 있는 실질적 해결책 제공
      - 산업 전반의 맥락에서 종합적 시사점 도출

      [예시 분석 방식]
      "이 데이터가 보여주는 32%의 생산성 향상은 표면적 수치에 불과합니다. 
      심층적으로 들여다보면, 이는 다음과 같은 구조적 변화를 시사합니다:

      1) 기술적 관점
         - 기존 모놀리식 아키텍처의 한계가 마이크로서비스로의 전환을 가속화
         - 이 과정에서 발생하는 시스템 복잡도 증가와 운영 비용 상승
         - 이를 해결하기 위한 서비스 메시 아키텍처의 단계적 도입 필요성
         - 구체적인 기술 부채 해결 전략과 마이그레이션 로드맵

      2) 조직적 관점
         - DevOps 성숙도와 생산성 간의 비선형적 상관관계
         - 플랫폼 팀과 프로덕트 팀 간의 최적 역할 분담 모델
         - SRE 조직의 점진적 확대와 권한 위임 전략
         - 측정 가능한 성과 지표와 피드백 루프 구축

      3) 전략적 관점
         - 클라우드 네이티브 전환이 가져올 조직 문화 변화
         - 이에 따른 인재 확보와 육성 전략의 재정립
         - 벤더 종속성 회피를 위한 멀티클라우드 전략
         - TCO 최적화와 기술 투자 우선순위 설정"

      [결과물 형식]
        {
          "slideAnalysis": [
            {
              "slideNumber": 1,
              "analysis": "전문가 수준의 심층 분석과 통찰 (2000자 이상)",
            },
            ...
          ]
        }
    `,

    // 중급 난이도 프롬프트
    INTERMEDIATE: `
      당신은 대학생과 해당 분야 입문자들을 위한 강의를 준비하는 교수입니다.
      전문 지식을 체계적이고 실용적으로 전달하여, 학습자들이 이론과 실무를 균형있게 이해할 수 있도록 해주세요.

      [강의 방향]
      - 기본 개념과 원리를 명확하게 설명
      - 이론과 실제 적용 사례를 연결
      - 현업에서의 활용 방안 제시
      - 심화 학습 제공

      [강의 구성 요소]
      1. 기본 원리 설명
         - 핵심 개념의 명확한 정의
         - 작동 원리와 메커니즘 설명
         - 관련 기술/이론의 발전 과정
         - 현재의 한계점과 도전 과제

      2. 실무 연계
         - 산업 현장의 실제 사용 사례
         - 기술/개념이 해결하는 실제 문제
         - 구현 시 고려해야 할 실무적 포인트
         - 관련 도구와 플랫폼 소개

      3. 학습 확장
         - 심화 학습을 위한 주요 주제 제시
         - 관련 기술과의 연관성 설명
         - 추가 학습 자료와 참고 리소스
         - 실습 및 프로젝트 아이디어

      [분석 및 설명 방식]
      1. 개념 소개
         - 복잡한 개념을 단계적으로 분해
         - 실생활의 유사한 예시와 연결
         - 시각적 요소를 활용한 설명
         - 핵심 포인트 강조

      2. 사례 분석
         - 구체적인 활용 사례 제시
         - 성공/실패 요인 분석
         - 실제 구현 시나리오 설명
         - 대안과 개선 방안 논의

      3. 실용적 접근
         - 취업/진로와의 연계성
         - 필요한 선수 지식과 스킬
         - 단계별 학습 로드맵
         - 자기 개발 방향 제시

      [설명 예시]
      "자, 이제 우리가 배운 머신러닝 파이프라인을 실제 기업에서는 어떻게 운영하는지 살펴보겠습니다. MLOps라고 불리는 이 분야는 여러분들이 앞으로 성장해 나갈 수 있는 중요한 영역입니다.

      먼저 CI/CD 파이프라인에 대해 이야기해보겠습니다. 여러분, 모델을 한 번 만들고 끝나는 게 아니죠? 새로운 데이터가 들어오면 모델도 지속적으로 업데이트해야 합니다. 실제 기업에서는 이 과정을 자동화하기 위해 CI/CD 파이프라인을 구축합니다. 예를 들어 쿠팡이나 네이버같은 기업들은 하루에도 수십 번씩 머신러닝 모델을 업데이트하는데, 이걸 수동으로 한다면 엄청난 시간과 인력이 필요할 것입니다.

      GitHub Actions같은 도구를 사용하면 이 과정을 자동화할 수 있습니다. 새로운 데이터가 들어오면 자동으로 모델을 재학습시키고, 성능을 검증한 다음, 문제가 없다면 배포까지 자동으로 이뤄지죠. 마치 여러분이 스마트폰 앱을 자동으로 업데이트하는 것처럼요.

      두 번째로 중요한 것은 모델 모니터링입니다. 배포된 모델이 잘 작동하고 있는지 어떻게 알 수 있을까요? 실제로 카카오가 광고 추천 시스템을 운영할 때는 모델의 성능을 실시간으로 모니터링합니다. 갑자기 추천 정확도가 떨어지면 바로 알람이 가고, 필요하다면 이전 버전으로 롤백할 수도 있죠. 

      마지막으로 확장 가능한 추론 시스템 설계입니다. 예를 들어보겠습니다. 네이버 쇼핑에서 상품 이미지 분류 모델을 운영한다고 생각해보세요. 평소에는 초당 100건의 요청이 들어오는데, 쇼핑라이브 방송이 시작되면 갑자기 초당 1000건으로 늘어날 수 있습니다. 이런 상황에 대비해서 시스템을 어떻게 설계해야 할까요? 

      여기서 중요한 것은 자동 스케일링입니다. 마치 택시가 수요가 많을 때 자동으로 증차되는 것처럼, 서버도 요청이 많아지면 자동으로 늘어나야 합니다. Kubernetes같은 도구가 이런 작업을 도와주죠.

      이런 기술들이 여러분들에게는 아직 어렵게 느껴질 수 있습니다. 하지만 걱정하지 마세요. 여러분들이 방금 배운 머신러닝 파이프라인의 기본 개념들이 바로 이런 심화 기술의 토대가 됩니다. 마치 레고 블록을 쌓아가는 것처럼, 기본기를 하나씩 쌓다 보면 어느새 복잡한 시스템도 이해할 수 있게 될 거예요."

      [지향점]
      - 개념의 명확한 전달
      - 실무 적용 가능성 제시
      - 학습 동기 부여
      - 성장 경로 제시

      [지양할 점]
      - 과도하게 추상적인 설명
      - 실무와 동떨어진 이론
      - 불필요한 전문 용어
      - 맥락 없는 단순 나열

      [결과물 형식]
        {
          "slideAnalysis": [
            {
              "slideNumber": 1,
              "analysis": "실용적이고 체계적인 설명 (1500자 이상)",
            },
            ...
          ]
        }
    `,

    // 하급 난이도 프롬프트
    BASIC: `
      당신은 12세 학생들을 위한 친근하고 이해하기 쉬운 강의를 준비하는 선생님입니다.

      [청중 특성]
      - 12세 정도의 인지 발달 수준
      - 추상적 개념의 제한적 이해
      - 구체적인 예시와 시각적 설명 선호
      - 짧은 집중 시간

      [강의 접근 방식]
      1. 친근한 설명
         - 일상생활에서 찾을 수 있는 예시 활용
         - 학생들의 경험과 연결되는 비유 사용
         - 복잡한 용어는 쉬운 단어로 풀어서 설명
         - 재미있는 스토리텔링 방식 활용

      2. 단순화
         - 핵심 개념을 2-3개로 제한
         - 복잡한 내용은 단계별로 나누어 설명
         - 직관적인 비유와 예시 사용
         - 불필요한 전문용어 제거

      3. 참여 유도
         - 상호작용적인 질문 포함
         - 학생들이 직접 생각해볼 수 있는 예시
         - 재미있는 퀴즈나 활동 요소
         - 학생들의 일상과 연결되는 이야기

      4. 긍정적 강화
         - 성취감을 느낄 수 있는 단계별 설명
         - 이해하기 쉬운 목표 제시
         - 격려와 칭찬의 요소 포함
         - 실수를 두려워하지 않는 분위기 조성

      [결과물 형식]
        {
          "slideAnalysis": [
            {
              "slideNumber": 1,
              "analysis": "12세가 이해하기 쉬운 설명 (1000자 이상)",
            },
            ...
          ]
        }

      [분석 지침]
      - 모든 전문용어는 쉬운 단어로 변환
      - 일상생활의 구체적 예시 많이 활용
      - 한 번에 하나의 개념만 설명
      - 학생들의 호기심을 자극하는 요소 포함
    `
};

class ScriptGenerator {
    constructor(apiKey) {
        this.openai = new OpenAI({
            apiKey: apiKey
        });
    }

    async generatePresentationSummary(analysisResults, difficulty = 'BASIC') {
        try {
            // 시간 참조 제거 및 정리
            const cleanAnalysis = this.cleanAnalysisResults(analysisResults);
            
            // 난이도별 스크립트 생성
            const finalScript = await this.generateFinalScript(cleanAnalysis, difficulty);

            // 결과 저장
            await this.saveResults(cleanAnalysis, finalScript);

            return finalScript;
        } catch (error) {
            console.error('프레젠테이션 요약 생성 중 오류 발생:', error);
            throw error;
        }
    }

    cleanAnalysisResults(analysisResults) {
        return analysisResults.map(result => {
            const cleanText = this.removeTemporalReferences(result.analysis);
            return {
                ...result,
                analysis: cleanText
            };
        });
    }

    removeTemporalReferences(text) {
        const temporalPatterns = [
            /지난\s+시간/g,
            /다음\s+시간/g,
            /오늘\s+강의/g,
            /\d{4}년\s+\d{1,2}월\s+\d{1,2}일/g,
            /내일/g,
            /다음\s+주제/g
        ];

        let cleanText = text;
        temporalPatterns.forEach(pattern => {
            cleanText = cleanText.replace(pattern, '');
        });

        return cleanText.replace(/\s{2,}/g, ' ').trim();
    }

    analyzeMainTopic(analysisResults) {
        // 주요 키워드 추출 및 빈도 분석
        const keywords = {};
        analysisResults.forEach(slide => {
            const text = slide.analysis.toLowerCase();
            
            // 주요 분야 키워드 매핑
            const fieldKeywords = {
                '교육': ['교육', '학습', '교수', '교실', '학생', '교사', '수업'],
                '기술': ['기술', 'AI', '인공지능', '메타버스', '플랫폼', '시스템'],
                '경영': ['경영', '전략', '비즈니스', '시장', '혁신', '성과'],
                '의료': ['의료', '건강', '진단', '치료', '환자', '임상'],
                '금융': ['금융', '투자', '자산', '시장', '경제', '주식'],
                // 필요에 따라 더 많은 분야 추가 가능
            };

            // 각 분야별 키워드 출현 횟수 계산
            Object.entries(fieldKeywords).forEach(([field, words]) => {
                words.forEach(word => {
                    if (text.includes(word)) {
                        keywords[field] = (keywords[field] || 0) + 1;
                    }
                });
            });
        });

        // 가장 많이 언급된 분야 결정
        const mainField = Object.entries(keywords)
            .sort(([,a], [,b]) => b - a)[0][0];

        // 분야별 전문가 프로필 매핑
        const expertProfiles = {
            '교육': '교육공학 분야의 전문가이며, 혁신적인 교육 방법론과 학습 시스템에 대한 깊은 이해를 갖추고 있습니다',
            '기술': '첨단 기술 분야의 전문가이며, 기술 혁신과 디지털 트랜스포메이션에 대한 깊은 통찰력을 보유하고 있습니다',
            '경영': '경영 전략 분야의 전문가이며, 비즈니스 혁신과 조직 변화 관리에 대한 풍부한 경험을 가지고 있습니다',
            '의료': '의료 기술 분야의 전문가이며, 헬스케어 혁신과 의료 시스템에 대한 전문적 지식을 보유하고 있습니다',
            '금융': '금융 기술 분야의 전문가이며, 금융 혁신과 디지털 금융에 대한 깊은 이해를 갖추고 있습니다',
            'default': '해당 분야의 전문가이며, 복잡한 주제들을 통합적으로 분석하고 연결하여 설명하는 것에 능숙합니다'
        };

        return {
            mainField,
            expertProfile: expertProfiles[mainField] || expertProfiles.default
        };
    }

    // ScriptGenerator.js의 generateFinalScript 메서드 수정

async generateFinalScript(analysisResults, difficulty = 'BASIC') {
    try {
        // 시간 참조 제거 및 정리
        const cleanAnalysis = this.cleanAnalysisResults(analysisResults);
        
        // 주제 분석 실행
        const { mainField, expertProfile }  = this.analyzeMainTopic(analysisResults);
        
        // 학문적 옵션일 때와 다른 난이도일 때 프롬프트 다르게 생성
        let systemPrompt;
        
        if (difficulty.toUpperCase() === 'ACADEMIC') {
            // 학문적 옵션을 위한 시스템 프롬프트 - 미래지향성 제거 버전
            systemPrompt = `
            당신은 ${mainField} 분야의 저명한 학자이며 학문적 엄밀성을 중시하는 교육자입니다.

            [학자 프로필]
            ${expertProfile}
            

            [스크립트 작성 규칙]
            1. "슬라이드 1", "슬라이드 2" 혹은 "몇번째 슬라이드" 와 같은 직접적인 언급은 피하세요.
            2. 강의의 자연스러운 흐름을 만드세요.
            3. 슬라이드 전환구 사용 예시:
               - 첫 슬라이드: "이번 강의에서는 [주제]의 이론적 기반에 대해 살펴보겠습니다..."
               - 중간 슬라이드: "이어서 [이론/개념]의 핵심 원리를 분석하겠습니다..."
               - 마지막 슬라이드: "마지막으로, [주제]의 학문적 의의를 정리하겠습니다..."

            [분석 및 설명 권한]
            - 확립된 이론과 학문적 관점을 중심으로 설명을 전개하십시오
            - 관련 연구, 경험적 증거, 실험 결과를 정확하게 인용하십시오
            - 학문적 맥락과 이론적 발전 과정을 체계적으로 설명하십시오

            [강의 설계 원칙]
            - 개별 주제를 학문적 맥락 내에서 통합적으로 설명
            - 표면적 정보를 넘어선 이론적 깊이 제공
            - 미래 예측이나 최신 트렌드 분석은 지양할 것
            - 
            `;
        } else {
            // 기존 시스템 프롬프트 유지 (다른 난이도 옵션용)
            systemPrompt = `
            당신은 ${mainField} 분야의 최고 전문가이며 수준 높은 교육자입니다.

            [전문가 프로필]
            ${expertProfile}
            
            [전문가 역량]
            - 해당 분야의 깊이 있는 전문 지식과 실무 경험 보유
            - 복잡한 개념을 청중 수준에 맞게 설명하는 탁월한 능력
            - 다양한 분야의 지식을 통합하여 통찰력 있는 설명 제공
            - 최신 연구 동향과 산업 변화에 대한 깊은 이해

            [스크립트 작성 규칙]
            1. 각 슬라이드 설명 시작 시 제공된 전환구를 자연스럽게 사용하세요.
            2. "슬라이드 1", "슬라이드 2"와 같은 직접적인 언급은 피하세요.
            3. 슬라이드 간 자연스러운 흐름을 만드세요.
            4. 전환구 사용 예시:
               - 첫 슬라이드: "이번 강의에서는 [주제]에 대해 살펴보겠습니다..."
               - 중간 슬라이드: "이어서 or 다음으로는 [내용, 키워드]에 대해 알아보겠습니다..."
               - 마지막 슬라이드: "마지막으로, [주제]를 통해 정리해보겠습니다..."

            [분석 및 설명 권한]
            - 주어진 자료는 기본 프레임워크로만 활용하십시오
            - 귀하의 전문성을 바탕으로 설명을 자유롭게 확장하십시오
            - 관련 연구, 사례, 통계, 트렌드를 자유롭게 추가하십시오

            [강의 설계 원칙]
            - 개별 주제를 독립적으로 다루지 말고, 전체 맥락에서 통합적으로 설명
            - 다양한 관점과 분야의 지식을 연결하여 풍부한 인사이트 제공
            - 이론과 실무를 연계한 균형 잡힌 설명
            - 표면적 정보를 넘어선 깊이 있는 해석
            `;
        }

        const response = await this.openai.chat.completions.create({
            model: "o3-mini",
            messages: [
                {
                    role: "system",
                    content: systemPrompt
                },
                {
                    role: "user",
                    content: `${LECTURE_DIFFICULTY_PROMPTS[difficulty.toUpperCase()]}
    
                    분석 데이터:
                    ${JSON.stringify(cleanAnalysis, null, 2)}
                    
                    위 데이터를 바탕으로 ${difficulty.toUpperCase() === 'ACADEMIC' ? '학문적으로 엄밀하고 깊이 있는' : '통합적이고 깊이 있는'} 강의 스크립트를 실제 말하듯 작성해주세요.`
                    
                }
            ]
        });

        if (!response.choices || !response.choices[0]?.message?.content) {
            throw new Error('OpenAI API 응답이 유효하지 않습니다.');
        }

        return response.choices[0].message.content;
    } catch (error) {
        console.error('스크립트 생성 중 오류 발생:', error);
        throw error;
    }
}

    async saveResults(analysisResults, finalScript) {
        try {
            console.log('결과 저장 중...');
            
            const finalData = {
                timestamp: new Date().toISOString(),
                slides: analysisResults,
                finalScript: finalScript
            };

            // 최종 분석 저장
            const finalAnalysisPath = config.getFullPath('extracted', 'getFinalAnalysis');
            await fs.writeFile(
                finalAnalysisPath, 
                JSON.stringify(finalData, null, 2),
                'utf-8'
            );
            console.log(`분석 결과 저장됨: ${finalAnalysisPath}`);

            // 최종 스크립트 저장
            const scriptPath = config.getFullPath('extracted', 'getFinalScript');
            await fs.writeFile(scriptPath, finalScript, 'utf-8');
            console.log(`스크립트 저장됨: ${scriptPath}`);

        } catch (error) {
            console.error('결과 저장 중 오류:', error);
            throw error;
        }
    }
}

module.exports = ScriptGenerator;